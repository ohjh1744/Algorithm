

1.1
대입연산: 이중포문안에서는 n^2, 3중포문안에서는 n^2(n-1)
-> n^2 + n^2(n-1) = n^3
곱하기 연산: 이중포문안에서는 n^2, 3중포문안에서는 n^2(n-1)
-> n^2 + n^2(n-1) = n^3\
더하기 연산: 3중포문안에서 n^2(n-1) = n^3 - n^2

1.2
3중포문 -> n^3 - n^2 -> 세타(n^3).

1.3
i, j, k는 상수에 불과, M, A, B배열의 공간만 사용 (nxn)*3 = 3n^2 = 세타(n^2).

2.1
답은 c=17 & n₀=2 , c=6 & n₀=10

78 <136 
17 >15
5030 > 5000
5030 > 6000

2.2 답 3개 
3 >= 3
3 >= 2
11 < 12
n2만 봐도 알수있음.

2.3  
12n^2 + nlog(2^n) +  nlog(n^(1/2(n+루트n)))
12n^2 + n^2 + nlog(n^(1/2(n+루트n)))
= 13n^2 + nlog(n^(1/2(n+루트n)))
빅세타로 표기했을데 13n^2가 더크므로 답은 세타(n^2)

3.1.
n크기가 반절씩 줄고 앞뒤로 2번선언하기때문에 -> 2T(n/2)
베이스케이스에 도달하고나면, 포문이 돌아가기때문에 -> C만큼n반복
T(n)= 2T(n/2) + Cn

3.2.
T(n/2) = 2T(n/4) + 2Cn
대입:
T(n) = 2^2(n/2^2) + 2Cn

3.3
 2^k(n/2^k) + kCn

3.4
문제에서 n = 2^k로 가정, k = logn
 2^k(n/2^k) + kCn -> nT(1) + Cnlogn
                          -> Cn + Cnlogn

4.1
n0 <= i <= k 구간이므로
k/2 + 4 < k
-> k + 8 < 2k
-> 8 < k 
-> k >8
즉 답은 8(A에들어갈수있는자연수중이므로, 8~).

4.2
k/2 +4 <= 3k/4
-> k + 8 <= 3k/2
-> 2k + 16 <= 3k
-> 16 <= k, k >= 16
즉, 답은 16.


4.3
clogk + clog3 - clog4 + C <= clogk 가 만족할려면,
clog3 - clog4 + C 부분이 0이나 음수
clog3 - clog4 + C<= 0

답 : c >= C/(log3 - log4) 

5.1
반복문을 통해 4번 T(n/8) 반복.
base case 도달후 임의상수C만큼 그아래 반복문도 n실행.
-> T(n) = 4T(n/8) + Cn

5.2
a = 4, b= 8, f(n) = Cn
h(n) = n^log8 4 = n^(2/3).
lim f(n)/h(n) = Cn /  n^(2/3) -> 무한대
af(n/b) = 4f(n/8) = C*4*n/8 < Cn -> 성립.
답, T(n) = 세타(n)

5.3
T(n/16)이 8 실행, 
base case도달하면  아래 식 하나 C만큼 T(1)실행
-> T(n) = 8T(n/16) + Cn^1/2

5.4
a = 8, b= 16, f(n) = Cn^1/2
h(n) = n^log16 8 = n^(3/4)
-> f(n)/h(n) -> 무한대로 보냈을때 0에수렴.
답은, T(n) = 세타n^(3/4).











